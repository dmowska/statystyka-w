{
  "hash": "4816d2897e9429bd959e0f3ad76b9dbb",
  "result": {
    "markdown": "# Statystyki opisowe\n\nStatystyki opisowe wykorzystuje się do przedstawienia ogólnej charakterystyki danych.\n\nStatystyki opisowe dzielimy na:\n\n1.  **Miary położenia** - określają przeciętny poziom oraz rozmieszczenie wartości zmiennej:\n\n    -   *Miary przeciętne* - np. *średnia arytemtyczna* - charakteryzują średni lub typowy poziom wartości zmiennej; mówią zatem o *przeciętnym* poziomie rozważanej zmiennej;\n    -   *Wartość modalna* - wartość najczęściej występująca w zbiorze danych;\n    -   *Kwantyle* - dzielą zbiorowość na określone części, np. 4, 10, 100 części.\n\n2.  **Miary rozrzutu** - określają granice zmienności danej zmiennej:\n\n    -   *rozstęp;*\n    -   *rozstęp kwartylowy;*\n    -   *odchylenie standardowe.*\n\n3.  **Miary asymetrii i koncentracji**.\n\n    -   *skośność;*\n    -   *kurtoza.*\n\n![](figures/3_stat_opis.png){width=\"500\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gapminder)\nlibrary(dplyr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata('gapminder', package ='gapminder')\ndane2007 <- filter(gapminder, year==2007)\n```\n:::\n\n\n## Podstawowe statystyki\n\nZestaw podstawowych statystyk opisowych obliczany jest za pomocą funkcji `summary()`. Funkcja ta oblicza wartość minimalną, wartość maksymalną, pierwszy i trzeci kwartyl, medianę oraz średnią.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(dane2007)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        country       continent       year         lifeExp     \n Afghanistan:  1   Africa  :52   Min.   :2007   Min.   :39.61  \n Albania    :  1   Americas:25   1st Qu.:2007   1st Qu.:57.16  \n Algeria    :  1   Asia    :33   Median :2007   Median :71.94  \n Angola     :  1   Europe  :30   Mean   :2007   Mean   :67.01  \n Argentina  :  1   Oceania : 2   3rd Qu.:2007   3rd Qu.:76.41  \n Australia  :  1                 Max.   :2007   Max.   :82.60  \n (Other)    :136                                               \n      pop              gdpPercap      \n Min.   :1.996e+05   Min.   :  277.6  \n 1st Qu.:4.508e+06   1st Qu.: 1624.8  \n Median :1.052e+07   Median : 6124.4  \n Mean   :4.402e+07   Mean   :11680.1  \n 3rd Qu.:3.121e+07   3rd Qu.:18008.8  \n Max.   :1.319e+09   Max.   :49357.2  \n                                      \n```\n:::\n:::\n\n\n## Statystyki opisowe: Miary położenia\n\n### Średnia arytmetyczna\n\n-   Obliczana jest jako iloraz sumy liczb i ilości tych liczb.\n-   Jest najczęściej używaną miarą charakteryzującą rozkład cechy\n-   Wady: czuła na wartości odstające\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsrednia_lifeExp <- mean(dane2007$lifeExp)\nsrednia_lifeExp \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 67.00742\n```\n:::\n:::\n\n\n> Obliczyć średnią wartość dla PKP (gdpPercap) w 2007 roku.\n\n### Średnia ważona\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsrednia_w_lifeExp <- weighted.mean(dane2007$lifeExp, dane2007$pop)\n```\n:::\n\n\n### Średnia harmoniczna\n\n\n::: {.cell}\n\n```{.r .cell-code}\nharmonic_mean = function(x){\n  1 / mean(1 / x)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrzeka = c(6, 3.2) #km/h\nharmonic_mean(rzeka)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4.173913\n```\n:::\n:::\n\n\n### Średnia geometryczna\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeometric_mean = function(x){\n  n = length(x)\n  prod(x) ^ (1 / n)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nzmiana <- c(1.026392, 1.011959)\ngeometric_mean(zmiana)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.01915\n```\n:::\n:::\n\n\n### Kwantyle\n\nKwantyle to wartości cechy, które dzielą analizowany zbiór danych na określone części pod względem liczby jednostek. Części te pozostają w stosunku do siebie w określonych proporcjach:\n\n-   Kwartyle - podział na 4 części:\n    -   Kwartyl pierwszy (Q1)\n    -   Mediana - kwartyl drugi\n    -   Kwartyl trzeci (Q3)\n-   Decyle - podzial na 10 części\n-   Percentyle - podział na 100 częsci\n\nFunkcja `quantile()` oblicza dowolną wartość kwantyli. Argument *probs* pozwala na zdefyniowanie dowolnych wartości, które mają zostać wyliczone. Argument ten przyjmuje wartości z przedziału od 0 do 1.\n\n![](figures/3_stat_kwartyle.png){width=\"500\"}\n\n#### Kwartyle\n\nFunkcja `quantile()` domyślnie zwraca wartośći kwartyli.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkwartyle <- quantile(dane2007$lifeExp)\nkwartyle\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      0%      25%      50%      75%     100% \n39.61300 57.16025 71.93550 76.41325 82.60300 \n```\n:::\n:::\n\n\nKwartyle są także obliczane przez funkcję `summary()`, która dodatkowo zwraca także wartości minimalną, maksymalną oraz średnią.\n\n#### Decyle\n\nW poniższym przykładzie *seq(0,1,0.1)* zwraca sekwencję wartości od 0 do 1 z krokiem co 0.1. Odpowiada to podziałowi danych na 10 równych części.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndecyle <- quantile(dane2007$lifeExp, probs = seq(0, 1, 0.1))\ndecyle\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     0%     10%     20%     30%     40%     50%     60%     70%     80%     90% \n39.6130 48.1734 54.1814 59.8127 67.0006 71.9355 73.2048 75.4719 78.2668 79.8223 \n   100% \n82.6030 \n```\n:::\n:::\n\n\n#### Percentyle\n\nW poniższym przykładzie zbiór zostanie podzielony na 100 równych części.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npercentyle <- quantile(dane2007$lifeExp, probs = seq(0, 1, 0.01))\nhead(percentyle, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      0%       1%       2%       3%       4%       5%       6%       7% \n39.61300 42.20582 42.53488 42.62397 43.21484 43.87365 45.17202 46.16868 \n      8%       9% \n46.40872 46.73593 \n```\n:::\n:::\n\n\n#### Dowolne wartości kwantyli\n\nW poniższym przykładzie zostanie wyliczony 5 oraz 95 percentyl.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq <- quantile(dane2007$lifeExp, probs = c(0.05, 0.95))\nq\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      5%      95% \n43.87365 80.74060 \n```\n:::\n:::\n\n\n> Obliczyć pierwszy, trzeci kwartyl oraz decyle dla gdpPercap.\n\n#### Mediana\n\nMediana to wartość, która dzieli zbiór danych na 2 równe części. Mediana obliczana jest przez funkcję `median()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian_lifeExp <- median(dane2007$lifeExp)\nmedian_lifeExp \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 71.9355\n```\n:::\n:::\n\n\n> Obliczyć medianę dla gdpPercap.\n\n**Mediana a średnia arytmetyczna**\n\n-   dla rozkładu symetrycznego mediana oraz średnia będą równe.\n-   mediana jest lepszą miarą w przypadku rozkładów skośnych.\n-   średnia jest bardziej czuła na wartości odstające.\n-   średnia jest bardziej przydatna dla małych zbiorów danych.\n\nPodsumowanie: Warto podawać obie wartości.\n\n### Wartość modalna\n\n-   wartość cechy, która w zbiorze danych występuje najczęściej. W R nie ma wbudowanej funkcji do obliczania tej statystyki.\n\n## Statystyki opisowe: Miary rozrzutu\n\n### Minimum i maksimum\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_lifeExp <- min(dane2007$lifeExp)\nmin_lifeExp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 39.613\n```\n:::\n\n```{.r .cell-code}\nmax_lifeExp <- max(dane2007$lifeExp)\nmax_lifeExp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 82.603\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(dane2007$lifeExp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 39.613 82.603\n```\n:::\n:::\n\n\n### Rozstęp\n\n-   najprostsza miara zmienności\n-   różnica między wartości maksymalną oraz wartością minimalną\n-   wrażliwy na wartości odstające\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange_lifeExp <- max(dane2007$lifeExp) - min(dane2007$lifeExp)\n```\n:::\n\n\nUwaga! W R funkcja `range()` zwraca wektor składający się z dwóch wartości - minimalnej oraz maksymalnej, a nie rostęp (różnicę między tymi wartościami).\n\n> Obliczyć rozstęp dla gdpPercap\n\n### Rozstęp kwartylowy\n\n-   różnica między kwartylem trzecim i kwartylem pierwszym\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIQR_lifeExp <- IQR(dane2007$lifeExp)\n```\n:::\n\n\n> Obliczyć rozstęp kwartylowy dla gdpPercap.\n\n### Wariancja\n\n-   wariancja oraz odchylenie standardowe mierzą jak daleko dane rozchodzą się od średniej.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar_lifeExp <- var(dane2007$lifeExp)\n```\n:::\n\n\n### Odchylenie standardowe\n\n-   obliczane jako pierwiastek z wariancji\n\n-   obok średniej jest jednym z najczęściej stosowanych parametrów statystycznych:\n\n    -   jest obliczane ze wszystkich obserwacji w zbiorze danych\n    -   im zbiór danych jest bardziej zróżnicowany tym większe odchylenie standardowe.\n\n-   małe odchylenie standardowe - wartości są blisko średniej\n\n-   duże odchylenie standardowe - wartości są daleko od średniej.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd_lifeExp <- sd(dane2007$lifeExp)\nsd_lifeExp \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12.07302\n```\n:::\n:::\n\n\n> Jakie jest odchylenie standardowe dla gdpPercap?\n\n## Opisywanie danych nominalnych\n\n### Częstość\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(dane2007$continent)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  Africa Americas     Asia   Europe  Oceania \n      52       25       33       30        2 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(dane2007$continent) / length(dane2007$continent) * 100\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   Africa  Americas      Asia    Europe   Oceania \n36.619718 17.605634 23.239437 21.126761  1.408451 \n```\n:::\n:::\n\n\n## Statystykiw grupach\n\nPakiet `dplyr` pozwala także na obliczenie statystyk według grup, np. średnia długość trwania życia na poszczególnych kontynentach.\n\n-   Średnia oczekiwana długość życia w 2007 roku według kontynentów.\n\nObliczenie statystyk w grupach wymaga najpierw pogrupowania danych (funkcja `group_by()`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder2007 <- filter(gapminder, year == 2007)\nby_continent <- group_by(gapminder2007, continent)\nsmr_by_continent <- summarize(by_continent,\n                              mean_le = mean(lifeExp))\n\nsmr_by_continent\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  continent mean_le\n  <fct>       <dbl>\n1 Africa       54.8\n2 Americas     73.6\n3 Asia         70.7\n4 Europe       77.6\n5 Oceania      80.7\n```\n:::\n:::\n\n\nPowyższy kod można zapisać także z wykorzystaniem operatora łączącego %\\>%\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_by_continent <- gapminder %>% \n  filter(year == 2007) %>% \n  group_by(continent) %>% \n  summarize(mean_le = mean(lifeExp))\n\nmean_by_continent\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  continent mean_le\n  <fct>       <dbl>\n1 Africa       54.8\n2 Americas     73.6\n3 Asia         70.7\n4 Europe       77.6\n5 Oceania      80.7\n```\n:::\n:::\n\n\n> Oblicz średnią oczekiwaną długość trwania życia w poszczególnych latach.\n\n-   **Średnia oczekiwana długość życia w podziale na kontynenty oraz lata.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_continent_year <- group_by(gapminder, continent, year)\nsmr_by_continent_year <- summarize(by_continent_year,\n                              mean_le = mean(lifeExp))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'continent'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nsmr_by_continent_year\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 60 × 3\n# Groups:   continent [5]\n   continent  year mean_le\n   <fct>     <int>   <dbl>\n 1 Africa     1952    39.1\n 2 Africa     1957    41.3\n 3 Africa     1962    43.3\n 4 Africa     1967    45.3\n 5 Africa     1972    47.5\n 6 Africa     1977    49.6\n 7 Africa     1982    51.6\n 8 Africa     1987    53.3\n 9 Africa     1992    53.6\n10 Africa     1997    53.6\n# ℹ 50 more rows\n```\n:::\n:::\n\n\n> Oblicz średnią wartość gdpPercap w 2007 roku w podziale na kontynenty.\n\n> Oblicz średnią wartość gdpPercap w podziale na poszczególne kontynenty oraz lata. Przedstaw wynik w \"układzie szerokim\" - każdy wiersz to określony kontynent, a każda kolumna to określony rok.\n\n## Braki danych\n\nW R braki danych zazwyczaj kodowane są jako NA - Not Available.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNA + 1 \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\n2*NA \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nx = c(1,2,NA)\nmean(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nmean(x, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.5\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}