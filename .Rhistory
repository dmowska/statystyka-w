setwd("~/DYDAKTYKA/DYDAKTYKA_2024_2025/statystyka_wizualizacja")
pomiary_pol = read.csv("data/pomiary_pol.csv")
t.test(pomiary_pol, mu = 9, alternative = "two.sided", conf.level = 0.95)
t.test(pomiary_pol$annual_tavg, mu = 9, alternative = "two.sided", conf.level = 0.95)
t.test(pomiary_pol$annual_tavg, mu = 8, alternative = "less", conf.level = 0.95)
t.test(pomiary_pol$annual_tavg, mu = 8, alternative = "two.sided", conf.level = 0.95)
t.test(pomiary_pol$annual_tavg, mu = 7.5, alternative = "two.sided", conf.level = 0.95)
t.test(pomiary_pol$annual_tavg, mu = 7.5, alternative = "two.sided", conf.level = 0.99)
install.packages("climate")
library(remotes)
install_github("bczernecki/climate")
library(climate)
m = meteo_imgw(interval = 'monthly', rank='synop', year = 1991:2019, station = "POZNAŃ")
View(m)
?meteo_metadata_imgw
?meteo_imgw
mpoz = meteo_imgw(interval = 'monthly', rank='synop', year = 1980:2020, station = "POZNAŃ")
View(mpoz)
mday = meteo_imgw(interval = 'daily', rank='synop', year = 1990:2020, station = "POZNAŃ")
m = meteo_imgw(interval = "monthly", rank = "synop", year = 2000, coords = TRUE)
View(m)
?hydro_imgw
hy = hydro_imgw(interval = "semiannual_and_annual", year = 2010:2011, station = "POZNAŃ")
View(hy)
?hydro_shortening_imgw
?hydro_metadata_imgw
hy = hydro_imgw(interval = "semiannual_and_annual", year = 2010:2011, station = "POZNAŃ", col_names = "polish")
View(hy)
mpoz = meteo_imgw(interval = 'monthly', rank='synop', year = 1980:2020, station = "POZNAŃ", col_names = "polish")
View(mpoz)
install.packages("rnaturalearthdata")
install.packages("spData")
library(spData)
world
swiat = world
View(swiat)
library(sf)
x = st_read("/home/anna/Downloads/ne_10m_admin_0_countries/ne_10m_admin_0_countries.shp")
xx = x[, c("NAME", "NAME_PL", "ISO_A2", "ISO_A3", "TYPE", "SOVEIRGNT")]
xx = x[, c("NAME", "NAME_PL", "ISO_A2", "ISO_A3", "TYPE", "SOVEREIGNT")]
st_write(xx, "world_countries.gpkg")
getwd
getwd()
xx = x[, c("NAME", "NAME_PL", "ISO_A2", "ISO_A3", "TYPE", "SOVEREIGNT", "CONTINENT")]
st_write(xx, "world_countries.gpkg")
library(readxl)
a = read_excel("/home/anna/DYDAKTYKA/DYDAKTYKA_2024_2025/SIG/dane/WDI_DANE.xlsx", sheet = "Country")
unique(a$Region)
View(swiat)
library(readxl)
pf_to_xls <- "/home/anna/DYDAKTYKA/DYDAKTYKA_2024_2025/SIG/dane/WDI_DANE.xlsx"
GDP <- read_excel(pf_to_xls, sheet = "Country")
country <- read_excel(pf_to_xls, sheet = "Country")
GDP <- read_excel(pf_to_xls, sheet = "GPD")
country <- read_excel(pf_to_xls, sheet = "Country")
GDP <- read_excel(pf_to_xls, sheet = "GDP")
POP <- read_excel(pf_to_xls, sheet = "POP")
URBAN_POP <- read_excel(pf_to_xls, sheet = "URBAN_POP")
RURAL_POP <- read_excel(pf_to_xls, sheet = "RURAL_POP")
LET <- read_excel(pf_to_xls, sheet = "LET")
HDI <- read_excel(pf_to_xls, sheet = "HDI")
INCOME_GROUP <- read_excel(pf_to_xls, sheet = "INCOME_GROUP")
library(dplyr)
x = country %>%
left_join(GDP[, -1], by = "Code")
View(x)
country2 <- country %>%
filter(!is.na(Region))
x = country2 %>%
left_join(GDP[, -1], by = "Code")
View(x)
x = country2 %>%
left_join(GDP[, -1], by = "Code") %>%
left_join(POP[, -1], by = "Code")
View(x)
x = country2 %>%
left_join(GDP[, -1], by = "Code") %>%
left_join(POP[, -1], by = "Code") %>%
left_join(URBAN_POP[, -1], by = "Code") %>%
left_join(RURAL_POP[, -1], by = "Code") %>%
left_join(HDI[, -2], by = "Code") %>%
left_join(INCOME_GROUP[, -1], by = "Code")
View(x)
x = country2 %>%
left_join(GDP[, -1], by = "Code") %>%
left_join(POP[, -1], by = "Code") %>%
left_join(URBAN_POP[, -1], by = "Code") %>%
left_join(RURAL_POP[, -1], by = "Code") %>%
left_join(LET[, -1], by = "Code") %>%
left_join(HDI[, -2], by = "Code") %>%
left_join(INCOME_GROUP[, -1], by = "Code")
View(x)
INCOME_GROUP %>%
mutate(INCOME1990 = recode(INCOME1990, L = "Low income", LM = "Lower middle income", UM = "Upper middle income", H = "High income"))
INCOME_GROUP <- read_excel(pf_to_xls, sheet = "INCOME_GROUP")
INCOME_GROUP <- INCOME_GROUP %>%
recode(L = "Low income", LM = "Lower middle income", UM = "Upper middle income", H = "High income")
country2 <- country %>%
filter(!is.na(Region))
INCOME_GROUP <- INCOME_GROUP %>%
mutate(INCOME1990 = recode(INCOME1990, L = "Low income", LM = "Lower middle income", UM = "Upper middle income", H = "High income"),
INCOME2000 = recode(INCOME2000, L = "Low income", LM = "Lower middle income", UM = "Upper middle income", H = "High income"),
INCOME2010 = recode(INCOME2010, L = "Low income", LM = "Lower middle income", UM = "Upper middle income", H = "High income"),
INCOME2020 = recode(INCOME2020, L = "Low income", LM = "Lower middle income", UM = "Upper middle income", H = "High income"))
x = country2 %>%
left_join(GDP[, -1], by = "Code") %>%
left_join(POP[, -1], by = "Code") %>%
left_join(URBAN_POP[, -1], by = "Code") %>%
left_join(RURAL_POP[, -1], by = "Code") %>%
left_join(LET[, -1], by = "Code") %>%
left_join(HDI[, -2], by = "Code") %>%
left_join(INCOME_GROUP[, -1], by = "Code")
View(x)
df = country2 %>%
left_join(GDP[, -1], by = "Code") %>%
left_join(POP[, -1], by = "Code") %>%
left_join(URBAN_POP[, -1], by = "Code") %>%
left_join(RURAL_POP[, -1], by = "Code") %>%
left_join(LET[, -1], by = "Code") %>%
left_join(HDI[, -2], by = "Code") %>%
left_join(INCOME_GROUP[, -1], by = "Code")
df2020 <- df %>%
select(Code, Name, Region | ends_with("2020"))
View(df2020)
write.csv(df, "wdi1990_2020.csv")
write.csv(df2, "wdi2020.csv")
write.csv(df2020, "wdi2020.csv")
install.packages("gapminder")
install.packages("TeachingDemos")
